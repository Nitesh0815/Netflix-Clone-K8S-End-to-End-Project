---
# ==========================================================
# Simplified Ansible Playbook
# Automates setup of Jenkins, Monitoring, and Kubernetes nodes.
# ==========================================================

- name: üîß Configure All Servers (Common Setup)
  hosts: all
  become: yes
  tasks:
    - name: Update and upgrade apt packages
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

    - name: Install common packages
      ansible.builtin.apt:
        name:
          - curl
          - vim
          - git
          - unzip
          - net-tools
        state: present

# ----------------------------------------------------------
- name: üß± Setup Jenkins Server
  hosts: jenkins
  become: yes
  tasks:
    - name: Install Java (required for Jenkins)
      ansible.builtin.apt:
        name: openjdk-17-jdk
        state: present

    - name: Add Jenkins repo key
      ansible.builtin.shell: |
        curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee \
        /usr/share/keyrings/jenkins-keyring.asc > /dev/null

    - name: Add Jenkins apt repository
      ansible.builtin.apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/"
        state: present

    - name: Install Jenkins
      ansible.builtin.apt:
        name: jenkins
        state: present
        update_cache: yes

    - name: Enable and start Jenkins service
      ansible.builtin.systemd:
        name: jenkins
        enabled: yes
        state: started

# ----------------------------------------------------------
- name: üìä Setup Monitoring Server (Prometheus + Grafana)
  hosts: monitoring
  become: yes
  tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        name:
          - wget
          - tar
        state: present

    - name: Download and install Prometheus
      ansible.builtin.shell: |
        cd /tmp
        wget https://github.com/prometheus/prometheus/releases/download/v2.51.0/prometheus-2.51.0.linux-amd64.tar.gz
        tar xvf prometheus-2.51.0.linux-amd64.tar.gz
        sudo mv prometheus-2.51.0.linux-amd64 /usr/local/prometheus
      args:
        creates: /usr/local/prometheus/prometheus

    - name: Create Prometheus service
      ansible.builtin.copy:
        dest: /etc/systemd/system/prometheus.service
        content: |
          [Unit]
          Description=Prometheus
          After=network.target

          [Service]
          ExecStart=/usr/local/prometheus/prometheus \
            --config.file=/usr/local/prometheus/prometheus.yml \
            --storage.tsdb.path=/usr/local/prometheus/data
          Restart=always

          [Install]
          WantedBy=multi-user.target

    - name: Enable and start Prometheus
      ansible.builtin.systemd:
        name: prometheus
        enabled: yes
        state: started

    - name: Install Grafana
      ansible.builtin.apt:
        name: grafana
        state: present
        update_cache: yes

    - name: Enable and start Grafana service
      ansible.builtin.systemd:
        name: grafana-server
        enabled: yes
        state: started

# ----------------------------------------------------------
- name: ‚ò∏Ô∏è Setup Kubernetes Master Node
  hosts: k8s_master
  become: yes
  tasks:
    - name: Install Kubernetes dependencies
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
        state: present
        update_cache: yes

    - name: Add Kubernetes APT key and repo
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
        apt update

    - name: Install kubeadm, kubelet, kubectl
      ansible.builtin.apt:
        name:
          - kubelet
          - kubeadm
          - kubectl
        state: present
        update_cache: yes

    - name: Initialize Kubernetes master
      ansible.builtin.shell: |
        kubeadm init --pod-network-cidr=10.244.0.0/16
      args:
        creates: /etc/kubernetes/admin.conf

    - name: Setup kubeconfig for root user
      ansible.builtin.shell: |
        mkdir -p $HOME/.kube
        cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
        chown $(id -u):$(id -g) $HOME/.kube/config

    - name: Deploy Flannel CNI
      ansible.builtin.shell: |
        kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml

# ----------------------------------------------------------
- name: üß© Setup Kubernetes Worker Nodes
  hosts: k8s_worker
  become: yes
  tasks:
    - name: Install Kubernetes dependencies
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
        state: present
        update_cache: yes

    - name: Add Kubernetes repo and install tools
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.30/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        echo "deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.30/deb/ /" | sudo tee /etc/apt/sources.list.d/kubernetes.list
        apt update && apt install -y kubelet kubeadm kubectl
      args:
        creates: /usr/bin/kubeadm

    - name: Wait for master token file (SSM or manual copy)
      ansible.builtin.pause:
        prompt: "Paste the kubeadm join command here (from master node):"
